// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  email String @unique
  is_active Boolean
  role String
  auth0Id   String   @unique
  channels Channel[]
  episodes Episode[]
  comments Comments[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}
model Channel {
  id String @id @default(uuid())
  title String  @unique
  description String?
  episodes Episode[]
  user User @relation(fields: [appUserId], references: [id])
  appUserId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Episode {
  id String @id @default(uuid())
  title String 
  content String
  user User @relation(fields: [appUserId], references: [id])
  appUserId String
  audioId String @unique
  audio Audio @relation(fields: [audioId], references: [id])
  channelId String
  channel Channel @relation(fields: [channelId], references: [id])
  comments Comments[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Audio {
  id String @id @default(uuid())
  filePath String
  episode   Episode?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Category {
  id    String     @id @default(uuid())
  title String  
  description  String?
}

model Comments {
  id String @id @default(uuid())
  description String
  user User @relation(fields: [appUserId], references: [id])
  appUserId String
  episode Episode @relation(fields: [episodeId], references: [id])
  episodeId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}
model EpisodesCategoriesRelations {
  id String  @id @default(uuid())
  episodeId String @unique
  categoryId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}
model ChannelsCategoriesRelations {
  id String  @id @default(uuid())
  channelId String @unique
  categoryId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}
